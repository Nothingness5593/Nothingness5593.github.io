<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NOIP2012 选择题笔记</title>
      <link href="/Nothingness5593/2022/08/18/noip2012-choose/"/>
      <url>/Nothingness5593/2022/08/18/noip2012-choose/</url>
      
        <content type="html"><![CDATA[<p>写的时候可乐翻到键盘上了…怎么会有这种事情……</p><h2 id="NOIP2012-选择题笔记"><a href="#NOIP2012-选择题笔记" class="headerlink" title="NOIP2012 选择题笔记"></a>NOIP2012 选择题笔记</h2><h3 id="第6题"><a href="#第6题" class="headerlink" title="第6题"></a>第6题</h3><blockquote><p>6. 1946 年诞生于美国宾夕法尼亚大学的 ENIAC 属于（ ）计算机。</p><p>A. 电子管 B. 晶体管 C. 集成电路 D. 超大规模集成电路</p></blockquote><p>A</p><p>???<br>这啥啊，容我百度一下</p><p>电子计算机于1946年2月14日在美国宾夕法尼亚大学诞生，发明这台电子计算机的是美国人莫克利和艾克特及其团队。这是一台由美国军方定制打算用于军事的电子计算机。这台计算机将被用于计算弹道，其名称为“ENIAC”。<br>这台电子计算机是一台真正的巨型计算机，占地面积达170平方米，重量更是高达30吨，电子管作为其元器件就用了18000个，因此，这台电子计算机又被称为电子管计算机，每秒可进行5000次运算。“ENIAC”的电子管数量多，加上其体积过大，其耗电功率高达150千瓦左右，因此，这台巨大的电子计算机并不能工作过长时间。</p><p>说这么长一段不就是选A吗&#x3D; &#x3D;</p><h3 id="第7题"><a href="#第7题" class="headerlink" title="第7题"></a>第7题</h3><blockquote><p>7. 在程序运行过程中，如果递归调用的层数过多，会因为（ ）引发错误。</p><p>A. 系统分配的栈空间溢出 B. 系统分配的堆空间溢出</p><p>C. 系统分配的队列空间溢出 D. 系统分配的链表空间溢出</p></blockquote><p>A</p><p>写过bug看过报错的都知道了属于是（<br>在机器中，递归是用栈实现的</p><h3 id="第8题"><a href="#第8题" class="headerlink" title="第8题"></a>第8题</h3><blockquote><p>8. 地址总线的位数决定了 CPU 可直接寻址的内存空间大小，例如地址总线为 16 位，其最大的可寻址空间为 64KB。如果地址总线是 32 位，则理论上最大可寻址的内存空间为（ ）。</p><p>A. 128KB B. 1MB C. 1GB D. 4GB</p></blockquote><p>D</p><p>但是忘记怎么做的了&#x3D; &#x3D;<br>一会看看录屏</p><h3 id="第9题"><a href="#第9题" class="headerlink" title="第9题"></a>第9题</h3><blockquote><p>9. 以下 不属于目前 3G（第三代移动通信技术）标准的是（ ）。</p><p>A. GSM B. TD-SCDMA C. CDMA2000 D. WCDMA</p></blockquote><p>A</p><p>这种题现在应该不会出现了吧……</p><p>多选题一会在更，先传上去测试一下网站浏览。</p>]]></content>
      
      
      <categories>
          
          <category> NOIP初赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NOIP </tag>
            
            <tag> 初赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NOIP2016 选择题笔记</title>
      <link href="/Nothingness5593/2022/08/18/noip2016-choose/"/>
      <url>/Nothingness5593/2022/08/18/noip2016-choose/</url>
      
        <content type="html"><![CDATA[<h2 id="NOIP2016-选择题笔记"><a href="#NOIP2016-选择题笔记" class="headerlink" title="NOIP2016 选择题笔记"></a>NOIP2016 选择题笔记</h2><h3 id="第3题"><a href="#第3题" class="headerlink" title="第3题"></a>第3题</h3><blockquote><p>3. 二进制数 00101100 和 01010101 异或的结果是（ ）。</p><p>A. 00101000 B. 01111001 C. 01000100 D. 00111000</p></blockquote><p>B</p><p>他明明能送分，偏偏出了一道题，他真的，我哭死。</p><ul><li>待复习的：位运算</li></ul><h3 id="第5题"><a href="#第5题" class="headerlink" title="第5题"></a>第5题</h3><blockquote><p>5. 以比较作为基本运算，在N个数中找最小数的最少运算次数为（ ）。</p><p>A. N B. N-1 C. N 2 D. log N</p></blockquote><p>B</p><p>就是经典打擂台……</p><blockquote><p>8. G 是一个非连通简单无向图，共有 28 条边，则该图至少有（ ）个顶点。</p><p>A. 10 B. 9 C. 8 D. 7</p></blockquote><p>B</p><p>完全图边数 $ \frac{n*(n-1)}{2} $ ，非联通+1</p><blockquote><p>9. 某计算机的 CPU 和内存之间的地址总线宽度是 32 位（bit），这台计算机最多可以使用（ ）的内存。</p><p>A. 2GB B. 4GB C. 8GB D. 16GB</p></blockquote><p>B</p><p>32^2B &#x3D; 4G</p>]]></content>
      
      
      <categories>
          
          <category> NOIP初赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初赛 </tag>
            
            <tag> NOIP2016 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello, World!</title>
      <link href="/Nothingness5593/2022/08/17/hello-world/"/>
      <url>/Nothingness5593/2022/08/17/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello, World!"></a>Hello, World!</h1><p>来听点歌吧^^</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=360 height=120 src="//music.163.com/outchain/player?type=2&id=1402825201&auto=0&height=66"></iframe><h2 id="一个简单的介绍"><a href="#一个简单的介绍" class="headerlink" title="一个简单的介绍"></a>一个简单的介绍</h2><p>本站基于<a href="https://hexo.io/">Hexo</a>框架搭建，主题使用了<a href="https://github.com/blinkfox/hexo-theme-matery">Matery</a></p><p>自己的域名备案还没过，等待中</p><p>很多功能（比如评论）都懒得做了XD 不过搜索还是有的</p><p>欢迎交换友链^^</p><br><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>我是Nothingness5593，你可以叫我noth、5593或者虚无</p><p>平平无奇的上海在校高中生desu</p><p>喜欢的游戏是音游和日式rpg，colorbass重度沉迷</p><p>本站所有图片都来自推特画师<a href="https://twitter.com/CiloRanko">cilo</a>，画风真的很好看很喜欢</p><p>有什么其他的话日后再补充吧~</p><br><h2 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h2><p>不知道写什么，就表演一个hello world好了</p><pre class=" language-Pascal"><code class="language-Pascal">begin  writeln('Hello, World!')end.</code></pre><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-SQL"><code class="language-SQL">CREATE TABLE message (text char(15));INSERT INTO message (text) VALUES ('Hello, World!');SELECT text FROM message;DROP TABLE message;</code></pre><pre class=" language-c++"><code class="language-c++">#include <iostream>using namespace std; int main() &#123;  cout << "Hello, World!" << endl;  return 0;&#125;</code></pre><pre class=" language-MATLAB"><code class="language-MATLAB">disp('Hello, World!')</code></pre><pre class=" language-Python"><code class="language-Python">print("Hello, World!")</code></pre><pre class=" language-VB"><code class="language-VB">Public Sub Main()    Debug.Print "Hello, World!"End Sub</code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-js"><code class="language-js">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Hello, World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-c#"><code class="language-c#">using System; internal static class HelloWorld &#123;  private static void Main() &#123;    Console.WriteLine("Hello, World!");  &#125;&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
